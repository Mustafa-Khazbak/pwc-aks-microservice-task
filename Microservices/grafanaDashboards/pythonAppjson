{
  "title": "Python Application Performance",
  "schemaVersion": 27,
  "version": 1,
  "refresh": "10s",
  "panels": [
    {
      "id": 1,
      "type": "stat",
      "title": "Total HTTP Requests",
      "datasource": "Prometheus",
      "targets": [
        { "expr": "sum(flask_http_request_total)" }
      ]
    },
    {
      "id": 2,
      "type": "graph",
      "title": "HTTP Requests Per Second (RPS)",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(flask_http_request_total[1m])", "legendFormat": "{{method}} {{status}}" }
      ]
    },
    {
      "id": 3,
      "type": "graph",
      "title": "Request Latency (Average per Path)",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(flask_http_request_duration_seconds_sum[1m]) / rate(flask_http_request_duration_seconds_count[1m])", "legendFormat": "{{method}} {{path}} {{status}}" }
      ]
    },
    {
      "id": 4,
      "type": "graph",
      "title": "Errors Per Second",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(flask_http_request_exceptions_total[1m])", "legendFormat": "errors/sec" }
      ]
    },
    {
      "id": 5,
      "type": "graph",
      "title": "CPU Usage (Seconds)",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(process_cpu_seconds_total[1m])", "legendFormat": "cpu/sec" }
      ]
    },
    {
      "id": 6,
      "type": "graph",
      "title": "Memory Usage (Resident Memory)",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "process_resident_memory_bytes", "legendFormat": "RSS Bytes" }
      ]
    },
    {
      "id": 7,
      "type": "graph",
      "title": "Open File Descriptors",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "process_open_fds", "legendFormat": "FDs" }
      ]
    },
    {
      "id": 8,
      "type": "graph",
      "title": "Garbage Collections Per Generation",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(python_gc_objects_collected_total[1m])", "legendFormat": "gen {{generation}}" }
      ]
    },
    {
      "id": 9,
      "type": "graph",
      "title": "GC Collection Runs",
      "datasource": "Prometheus",
      "lines": true,
      "targets": [
        { "expr": "rate(python_gc_collections_total[1m])", "legendFormat": "gen {{generation}}" }
      ]
    }
  ]
}
